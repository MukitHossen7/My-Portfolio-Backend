// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  name       String
  email      String    @unique
  password   String?
  role       Role      @default(USER)
  provider   String?
  providerId String?
  picture    String?
  isStatus   Status    @default(ACTIVE)
  isVerified Boolean   @default(false)
  isDeleted  Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  Blog       Blog[]
  Project    Project[]
}

model Blog {
  id         Int        @id @default(autoincrement())
  title      String
  slug       String?    @unique
  excerpt    String?
  content    String
  thumbnail  String?
  isFeatured Boolean    @default(false)
  tags       String[]
  views      Int        @default(0)
  status     BlogStatus @default(DRAFT)
  authorId   Int
  author     User       @relation(fields: [authorId], references: [id])
  createdAt  DateTime   @default(now())
  updateAt   DateTime   @updatedAt
}

model Project {
  id              Int      @id @default(autoincrement())
  title           String
  slug            String?  @unique
  description     String
  thumbnail       String
  frontendRepoUrl String?
  backendRepoUrl  String?
  liveUrl         String?
  features        String[]
  technology      String[]
  ownerId         Int
  owner           User     @relation(fields: [ownerId], references: [id])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

enum Role {
  ADMIN
  USER
}

enum Status {
  ACTIVE
  INACTIVE
  BLOCKED
}

enum BlogStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}
